"""
EZPLOT
----------------------------------------------------------------------------

Author: William Baxter
First Release:  14 March 2007
Latest Release: 20 March 2007
Version: 0.1 alpha 4
Description:

This code lets you call matplotlib's pylab functions on a server
running as a separate process.  Why?  Because the way matplotlib works
typically causes the current process to hang.  Matplotlib opens GUI
windows, and GUIs want to have an event loop, and generally they don't
like to return from those event loops.

The ipython shell has special code that it uses to start up pylab in a
separate thread if you start it with the -pylab argument.   That's
great for when you're using ipython, but if you have a nice IDE that
you like to use besides ipython, then you're out of luck.  

Ezplot includes a server that runs as a separate process, and a client
whose API looks like matplotlib.pylab.  The client and server
communicate behind the scenes using XML-RPC.


QUICK HOW TO:

Ezplot contains a python program (ezplot.plotserver) that can run as a
completely separate process and handles requests via XML-RPC to make
matplotlib plots.  It also contains a client that you can invoke using

   import ezplot
   p = ezplot.Plotter()

   p.figure(1)
   p.plot([1,2,3],[1,4,9])

ezplot.Plotter accepts any of the commands listed on the main page of
matplotlib.  The Plotter also knows how to launch an instance of the
server on its own if it doesn't find one running already, so in most
cases it should not be necessary to start a server explicitly.  The
server is started the first time you try to invoke a remote matplotlib
method.


LIMITATIONS:

The catch is that the ezplot server makes no attempt to return objects
back.  So you can't do any fancy graph manipulation that requires
getting the figure handles back and tweaking them.

It's also probably pretty insecure.  Use at your own risk. In
particular I do a lot of pickling and tranmitting binary data, which
is blindly unpickled and passed to Matplotlib functions as arguments.
It would be nice if I could figure out how to limit the server to only
accepting connections from localhost.
"""

__all__ = ['common','plotserver','plotclient']

# Get __version__ etc into top level
from common import *

# This makes it possible to plot with just
#    import ezplot
#    p = ezplot.Plotter()
#    p.plot([1,2,3,4],[1,4,9,16])
from plotclient import Plotter
